from __future__ import print_function
from visual import *

s = sphere()
instruct = """
Try mouse and keyboard events,
and note the printed outputs.
"""
l = label(pos=s.pos, text=instruct)
redrawCount = 0

class RedrawCounter(object):
    redrawCount = 0

    def increment(self):
        self.redrawCount += 1

def handleMouseDown(evt, arbArg):
    print("Mouse down!" + `evt.pos` + ':' + `arbArg` + ':' + `evt.event`)

    if m.enabled:
        m.stop()
        print("Char events are now disabled")
    else:
        m.start()
        print("Char events are now enabled")

def handleMouseUp( evt ):
    print("Mouse up! " + `evt.event`)

def handleMouseClick( evt ):
    print("Mouse click!" + `evt.event`)
        
def handleChar( evt ):
    print("The ", evt.key, "character has been processed:", `evt.event`)
    if evt.key == 'R':
        print("There have been", redraw.redrawCount, "redraws")

def handleKeyUp( evt ):
    print("The ", evt.key, "key has gone up:", `evt.event`)

def handleKeyDown( evt ):
    print("The ", evt.key, "key has gone down", `evt.event`)

def handleMouseMove( evt ):
    print("Mouse moved! pos=", evt.pos, ":", `evt.event`)

redraw = RedrawCounter()

scene.bind('mousedown', handleMouseDown, scene)
scene.bind('mouseup', handleMouseUp)
scene.bind('click', handleMouseClick)

m = scene.bind('char', handleChar)
scene.bind('keyup', handleKeyUp)
scene.bind('keydown', handleKeyDown)
scene.bind('redraw', redraw.increment)
scene.bind('mousemove', handleMouseMove)
