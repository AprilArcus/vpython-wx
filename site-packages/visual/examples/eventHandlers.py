from __future__ import print_function
from visual import *

s = sphere()
l = label(pos=s.pos, text="hello")
redrawCount = 0

class RedrawCounter(object):
    redrawCount = 0

    def increment(self):
        self.redrawCount += 1

def handleMouseDown( mouse, arbArg, name ):
    print("Mouse down!" + `mouse` + ':' + `arbArg` + ':' + `name`)

    if m.enabled:
        m.stop()
        print("Char events are now disabled")
    else:
        m.start()
        print("Char events are now enabled")

def handleMouseUp( mouse ):
    print("Mouse up! " + `mouse`)

def handleMouseClick( mouse ):
    print("Mouse click!" + `mouse`)
        
def handleChar( key ):
    print("The ", key, "character has been processed")
    if key == 'R':
        print("There have been", redraw.redrawCount, "redraws")

def handleKeyUp( key ):
    print("The ", key, "key has gone up")

def handleKeyDown( key ):
    print("The ", key, "key has gone down")

def handleMouseMove( mouse ):
    print("Mouse moved! pos=", mouse.pos)

redraw = RedrawCounter()

scene.bind('mousedown', handleMouseDown, arbArg=scene)
scene.bind('mouseup', handleMouseUp)
scene.bind('click', handleMouseClick)

m = scene.bind('char', handleChar)
scene.bind('keyup', handleKeyUp)
scene.bind('keydown', handleKeyDown)
scene.bind('redraw', redraw.increment)
scene.bind('mousemove', handleMouseMove)


